openapi: "3.0.2"
info:
  title: Projeto Agendamento
  version: "1.0"
servers:
  - url: http://localhost:3000/api/v1
paths:
#user
  /user/auth:
    post:
      summary: Retorna o token para autenticação.
      description: Infoma o token para autenticação o tempo de expiração e qual o tipo de utilização
      security: []
      tags:
        - "User"
      responses:
        "200":
          description: retorna um token para autenticação
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Auth"
  # pacientes
  /paciente:
    get:
      summary: Recupera uma lista de pacientes.
      description: Recupera uma lista de pacientes.
      tags:
        - "pacientes"
      responses:
        "200":
          description: Retorna uma lista de itens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/pacientes"
    post:
      summary: Cadastra o paciente.
      tags:
        - "pacientes"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                cpf:
                  type: string
                email:
                  type: string
                senha:
                  type: string
              required:
                - nome
                - cpf
                - email
                - senha
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pacientes"
  /paciente/autentica:
    get:
      summary: Autentica paciente
      tags:
        - "pacientes"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cpf:
                  type: string
                  description: CPF do paciente
                senha:
                  type: string
                  description: Senha do paciente
              required:
                - cpf
                - senha
      responses:
        '200':
          description: Resultado da autenticação
          content:
            application/json:
              schema:
                type: object
                properties:
                  autenticado:
                    type: boolean
                    description: Resultado da autenticação
                    example: true
        '401':
          description: Autenticação falhou
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Resultado da autenticação
                    example: false
  # medico
  /medico:
    get:
      summary: Recupera uma lista de médicos.
      description: Recupera uma lista de médicos.
      tags:
        - "medico"
      responses:
        "200":
          description: Retorna uma lista de itens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/medico"
    post:
      summary: Cadastra o médico.
      tags:
        - "medico"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                crm:
                  type: string
                especialidade:
                  type: string
                Estado_CRM:
                  type: string
                senha:
                  type: string
              required:
                - nome
                - crm
                - especialidade
                - Estado_CRM
                - senha
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/medico"
  /medico/autentica:
    get:
      summary: Autentica médico
      tags:
        - "medico"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                crm:
                  type: number
                  description: CRM do médico
                senha:
                  type: string
                  description: Senha do médico
              required:
                - crm
                - senha
      responses:
        '200':
          description: Resultado da autenticação
          content:
            application/json:
              schema:
                type: object
                properties:
                  autenticado:
                    type: boolean
                    description: Resultado da autenticação
                    example: true
        '401':
          description: Autenticação falhou
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Resultado da autenticação
                    example: false
  # agenda
  /agenda:
    get:
      summary: Recupera uma lista de agenda disponíveis.
      description: Recupera uma lista de agenda disponíveis.
      tags:
        - "agenda"
      responses:
        "200":
          description: Retorna uma lista de itens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/agenda"
    post:
      summary: Cadastra a agenda.
      tags:
        - "agenda"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Data:
                  type: string
                  format: date
                HoraInicio:
                  type: string
                  format: time
                HoraFim:
                  type: string
                  format: time
                disponivel:
                  type: string
                IdMedico:
                  type: number
                Valor:
                  type: number
              required:
                - Data
                - HoraInicio
                - HoraFim
                - disponivel
                - IdMedico
                - Valor

      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/agenda"
  /agenda/{id}:
    put:
      summary: Atualiza os dados de uma agenda.
      tags:
        - "agenda"
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID da agenda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Data:
                  type: string
                  format: date
                HoraInicio:
                  type: string
                  format: time
                HoraFim:
                  type: string
                  format: time
                disponivel:
                  type: string
                IdMedico:
                  type: number
                Valor:
                  type: number
              required:
                - Data
                - HoraInicio
                - HoraFim
                - disponivel
                - IdMedico
                - Valor
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/agenda"
  # agendamento
  /agendamento:
    post:
      summary: Cadastra um agendamento.
      tags:
        - "agendamento"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ID_Paciente:
                  type: number
                ID_Agenda:
                  type: number
                Status:
                  type: string
              required:
                - ID_Paciente
                - ID_Agenda
                - Status
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/novoAgendamento"    
  /agendamento/cancela:
    put:
      summary: Cancela o agendamento com justificativa.
      tags:
        - "agendamento"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ID_Paciente:
                  type: number
                ID_Agenda:
                  type: number
                Status:
                  type: string
                Justificativa:
                  type: string
              required:
                - ID_Paciente
                - ID_Agenda
                - Status
                - Justificativa
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/agendamento"
           
  /agendamento/status:
        put:
          summary: Aceita/Recusa Agendamento do Paciente.
          tags:
            - "agendamento"
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    ID_Paciente:
                      type: number
                    ID_Agenda:
                      type: number
                    Status:
                      type: string
                  required:
                    - ID_Paciente
                    - ID_Agenda
                    - Status
          responses:
            "201":
              description: OK
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/novoAgendamento"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Auth:
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjYsImV4cCI6MTY5NzkyMjAwNjA1MywibmFtZSI6IkJydW5vIEJsYXV6aXVzIHNjaHVpbmR0IiwiZW1haWwiOiJicnVub2JsYXV6aXVzQGdtYWlsLmNvbSJ9.QVh-6NZB0gKTgiS2xBKNdgau2ZS0dOqyCnxNWFxAGW8
        expires_in:
          type: number
          example: 3600
        scope:
          type: string
          example: customScope
        token_type:
          type: string
          example: Bearer
    pacientes:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: "João da Silva"
        cpf:
          type: string
          example: "57396749050"
        email:
          type: string
          example: "joao@example.com"
        senha:
          type: string
          example: "senha123"
    medico:
      type: object
      properties:
        id:
          type: integer
          example: 1
        nome:
          type: string
          example: "Dr. Ana Maria"
        crm:
          type: string
          example: "123456"
        especialidade:
          type: string
          example: "Cardiologia"
        senha:
          type: string
          example: "senha123"
    agenda:
      type: object
      properties:
        Data:
          type: string
          format: date
        HoraInicio:
          type: string
          format: time
        HoraFim:
          type: string
          format: time
    agendamento:
      type: object
      properties:
        ID_Paciente:
          type: number
        ID_Agenda:
          type: number
        Status:
          type: string
          enum:
            - Confirmado
            - Pendente
            - Cancelado
            - Recusado
        Justificativa:
          type: string
          description: Justificativa para o status do agendamento cancelado pelo cliente
          nullable: true  # Campo opcional, pode estar presente ou não
    novoAgendamento:
      type: object
      properties:
        ID_Paciente:
          type: number
        ID_Agenda:
          type: number
        Status:
          type: string
          enum:
            - Confirmado
            - Pendente
            - Cancelado
            - Recusado
